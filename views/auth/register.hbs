<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Registro</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <div class="container mt-5">
    <h1>Registrarse</h1>
    
    <!-- Mostrar mensaje de error si existe -->
    {{#if errorMessage}}
      <div class="alert alert-danger">
        {{errorMessage}}
      </div>
    {{/if}}

    <form id="registerForm" action="/auth/register" method="POST">
      <div class="form-group">
        <label for="name">Nombre</label>
        <input type="text" class="form-control" id="name" name="name" required>
      </div>
      <div class="form-group">
        <label for="username">Nombre de Usuario</label>
        <input type="text" class="form-control" id="username" name="username" required>
      </div>
      <div class="form-group">
        <label for="email">Correo Electrónico</label>
        <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="form-group">
        <label for="password">Contraseña</label>
        <input type="password" class="form-control" id="password" name="password" required>
      </div>
      <button type="submit" class="btn btn-primary mt-3">Registrarse</button>
    </form>

    <p class="mt-3">¿Ya tienes una cuenta? <a href="/auth/login">Inicia sesión aquí</a>.</p>
  </div>

  <script>
    // Suponiendo que tienes el formulario y estás manejando la respuesta de la API de esta forma:
    const form = document.getElementById('registerForm');

    form.addEventListener('submit', async function(event) {
      event.preventDefault(); // Prevenir el envío tradicional del formulario

      const formData = new FormData(form);
      const formObj = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/auth/register', {
          method: 'POST',
          body: new URLSearchParams(formObj),
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
          }
        });

        const data = await response.json();
        
        if (response.ok) {
          // Mostrar mensaje emergente con los datos del usuario (sin contraseña)
          Swal.fire({
            icon: 'success',
            title: '¡Usuario registrado!',
            text: `Bienvenido, ${data.user.username}`,
          }).then(() => {
            window.location.href = '/auth/login'; // Redirigir a login después de mostrar el mensaje
          });
        } else {
          // Si hay un error, mostrarlo
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.error || 'Hubo un error, intenta nuevamente.',
          });
        }
      } catch (error) {
        console.error('Error al registrar el usuario:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Hubo un problema con el registro. Intenta nuevamente.',
        });
      }
    });
  </script>
</body>
</html>
